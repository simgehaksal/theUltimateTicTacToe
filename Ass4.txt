#ifndef PLAYER_H
#define PLAYER_H

using namespace std;
#include <iostream>

class TicTacToe {
public:
	char pickPlayer();
	void rowChoice();
	int pickRow();
	void columnChoice();
	int pickColumn();
	int checkBoard();
	int numOfGamesX();
	int numOfGameY();
	int numOfDraws();
	void TicTacBoard();
TotalNumGames;  ?
TypeOfGames;  ?
private:
	int row;
	int column;
	char player; //either X or Y
	int board[3][3];
	char display[3][3];
};

------------------------------------

class PlayerX {
private:
	int score;
public:
	//Default constructor
	PlayerX()
		score = 0;
		
	//Getter Setter Functions
	void SetScore(int score)
		this->score = score; 
	
	int GetScore()
		return score;

	//Update and print the score
	void UpdateScore() {
		cout << "Score: " << score << endl;
	}
}

-------------------------------------------------

class PlayerY {
private:
	int score;
public:
	//Default constructor
	PlayerY()
		score = 0;
		
	//Getter Setter Functions
	void SetScore(int score)
		this->score = score; 
	
	int GetScore()
		return score;

	//Update and print the score
	void UpdateScore() {
		cout << "Score: " << score << endl;
	}
}

--------------------------------------------------

#ifndef GRID_H
#define GRID_H

using namespace std;
#include <iostream>

class Grid {
private:
	char** Map;
	int size;
public:
	//Default constructor
	Grid() {
		**Map = NULL;
		size = 0;
	}
	
	//Constructor With Size
	Grid(int Size) {
		this->Size = Size;

		Map = new char*[Size];
		for (int i = 0; i < Size; i++)
			Map[i] = new char[Size];
	}
	
	//Getter Setter Functions
	void SetSize(int size)
		this->size = size;
		
	int GetSize()
		return size;
}

--------------------------------------------------

#include <iostream>
using namespace std;

#include "PlayerX.h"
#include "PlayerY.h"
#include "Grid.h"

int main() {
	int size, exit = false, command;
	Player *Player1 = new Player();
	Player *Player2 = new Player();

	cout << "Enter the size of the map" << endl;
	cin >> size;
	
	while (!exit)
	{
		fflush(stdin);
		cout << "Select type of game:" << endl;
		cout << "1. Classic Game" << endl;
		cout << "2.Ultimate Game" << endl;
		cout << "3. Exit" << endl;
		cin >> command;
		fflush(stdin);
		switch (command)
		{
		case '1':
			break;
		case '2':
			break;
		case '3':
			exit = true;
			cout << "Goodbye!" << endl;
			break;
		default:
			cout << "Invalid command!" << endl;
			break;
		}
	}
	
	system("PAUSE");
	return 0;
}